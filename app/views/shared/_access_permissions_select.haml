= hidden_field_tag :privacy_update, '1' unless object.new_record?

- class_field = object.to_str
.labelcol Privacy Settings:
.inputcol
  = select_tag  "#{class_field}[privacy_settings][authorization]",  options_for_select(object.authorization_select_options, object.authorization.to_i), :id => "#{class_field}_privacy_settings_authorization", :class => "toggle_on_select submit_on_change", :rel => "{toggleValue: #{ContentAuthorization::AuthPartial}, toggleElement: 'auth_select_partial'}"
  - unless object.new_record?
    %a#toggle_auth_select_partial.toggleable{:href=>'#', :style=>"#{style_hidden_if(!object.get_privacy_setting.partial?)}"} Edit 

  %br
  #auth_select_partial{:style=>"display:none;"}
    #relationship_options
      Select Relationships
      %br
      %ul
        - user.all_circles.each do |c|
          %li
            = check_box_tag "#{class_field}[privacy_settings][circles][]", c.id, object.authorized_for_group?(c)
            = c.name.pluralize
        %li
          = link_to 'Add new', '#'
          /= check_box_tag "#{class_field}[privacy_settings][circles][]", "Other"
          /Other
          /= text_field_tag "#{class_field}[privacy_settings][circles][other]"
    #guest_options
      Select Guests
      %br
      %ul
        - user.loved_ones.each do |g|
          %li
            = check_box_tag "#{class_field}[privacy_settings][guests][]", g.id, object.authorized_for_user?(g)
            = g.full_name
        %li
          = link_to 'Add new', '#'
    .clearboth
    
    - unless object.new_record?
      = f.submit "Update"
      = link_to_function('close') {|page| page.toggle :auth_select_partial}



