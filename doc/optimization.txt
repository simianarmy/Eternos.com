Using mod_deflate for Apache:
http://www.ricroberts.com/articles/2009/04/09/boost-speed-and-save-bandwidth-with-mod_deflate-for-apache

Using memcached with Rails:
http://www.ridingtheclutch.com/2009/01/08/cache-anything-easily-with-rails-and-memcached.html

Use Enterprise Ruby: (in use)
supposedly way better memory usage, performance with Passenger, thread usage

Ravelry case:
  http://highscalability.com/how-ravelry-scales-10-million-requests-using-rails
  
Mysqlplus (in use)
An enhanced MySQL database driver. With support for async operations and threaded database access.

slim attributes http://slim-attributes.rubyforge.org/ boosts mysql speed by using arrays instead of hashed lookup.
Hash extension gem also results in speedups when used: 
  http://blog.chak.org/2008/02/09/speeding-up-activerecord-with-hashes-take-2/

Passenger settings for opt.
  http://stackoverflow.com/questions/853532/slow-initial-server-startup-when-using-phusion-passenger-and-rails
  
Gzip apache contents:
  - enable mod_deflate in Apache 2.2+
  - per vhost:
  <Location />
      AddOutputFilterByType DEFLATE text/html text/plain text/xml text/css text/javascript application/javascript application/x-javascript
      BrowserMatch ^Mozilla/4 gzip-only-text/html
      BrowserMatch ^Mozilla/4\.0[678] no-gzip
      BrowserMatch \bMSIE !no-gzip !gzip-only-text/html
      # Make sure proxies don't deliver the wrong content
      Header append Vary User-Agent env=!dont-vary
  </Location>
  
Javascript/CSS compression/Asset management: 
  Jammit http://documentcloud.github.com/jammit/
  http://github.com/blog/551-optimizing-asset-bundling-and-serving-with-rails
  Sprockets http://getsprockets.org/

  
Fast Capistrano Deployment stragegies:
  http://github.com/blog/470-deployment-script-spring-cleaning
  http://github.com/37signals/fast_remote_cache/tree
